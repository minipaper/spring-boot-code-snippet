buildscript {
	ext {
		springBootVersion = '2.0.5.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id "com.moowork.node" version "1.2.0"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'net.minipaper'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

task copyWebApp(type: Copy) {
	from 'frontend/dist'
	into 'build/resources/main/static/.'
}
task appNpmInstall(type: NpmTask) {
	description = "Installs all dependencies from package.json"
	workingDir = file("${project.projectDir}/frontend")
	args = ["install"]
}
task appNpmBuild(type: NpmTask) {
	description = "Builds production version of the webapp"
	workingDir = file("${project.projectDir}/frontend")
	args = ["run", "build"]
}

appNpmBuild.dependsOn appNpmInstall
copyWebApp.dependsOn appNpmBuild
compileJava.dependsOn copyWebApp

node {
	// If true, it will download node using above parameters.
	download = true
	// Set the work directory for unpacking node
	workDir = file("${project.buildDir}/nodejs")
	// Set the work directory for NPM
	npmWorkDir = file("${project.buildDir}/npm")
	// Set the work directory for Yarn
	yarnWorkDir = file("${project.buildDir}/yarn")
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('org.springframework.boot:spring-boot-devtools')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

